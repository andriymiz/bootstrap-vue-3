"use strict";(self.webpackChunkbootstrap_vue_3=self.webpackChunkbootstrap_vue_3||[]).push([[534],{2338:function(a,n,s){s.r(n),s.d(n,{data:function(){return t}});const t={key:"v-61b52932",path:"/components/FormCheckbox.html",title:"Form Checkbox",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Checkbox values and v-model",slug:"checkbox-values-and-v-model",children:[{level:3,title:"Multiple checkboxes and accessibility",slug:"multiple-checkboxes-and-accessibility",children:[]}]},{level:2,title:"Inline and stacked checkboxes",slug:"inline-and-stacked-checkboxes",children:[]},{level:2,title:"Control sizing",slug:"control-sizing",children:[]},{level:2,title:"Button style checkboxes",slug:"button-style-checkboxes",children:[{level:3,title:"Individual checkbox button style",slug:"individual-checkbox-button-style",children:[]}]},{level:2,title:"Switch style checkboxes",slug:"switch-style-checkboxes",children:[{level:3,title:"Individual checkbox switch style",slug:"individual-checkbox-switch-style",children:[]}]},{level:2,title:"Non custom check inputs (plain)",slug:"non-custom-check-inputs-plain",children:[]},{level:2,title:"Contextual states",slug:"contextual-states",children:[]},{level:2,title:"Autofocus",slug:"autofocus",children:[]},{level:2,title:"Indeterminate (tri-state) support",slug:"indeterminate-tri-state-support",children:[]},{level:2,title:"Component reference",slug:"component-reference",children:[{level:3,title:"<b-form-checkbox>",slug:"b-form-checkbox",children:[]},{level:3,title:"Properties",slug:"properties",children:[]},{level:3,title:"Slots",slug:"slots",children:[]},{level:3,title:"Events",slug:"events",children:[]}]}],filePathRelative:"components/FormCheckbox.md",git:{updatedTime:1631222419e3}}},7371:function(a,n,s){s.r(n),s.d(n,{default:function(){return z}});var t=s(6252),e=s(3577),o=s(2262);const c=(0,t.uE)('<h1 id="form-checkbox" tabindex="-1"><a class="header-anchor" href="#form-checkbox" aria-hidden="true">#</a> Form Checkbox</h1><p>For cross browser consistency, <code>&lt;b-form-checkbox&gt;</code> uses Bootstrap&#39;s custom checkbox input to replace the browser default checkbox input. It is built on top of semantic and accessible markup, so it is a solid replacement for the default checkbox input.</p><h2 id="checkbox-values-and-v-model" tabindex="-1"><a class="header-anchor" href="#checkbox-values-and-v-model" aria-hidden="true">#</a> Checkbox values and <code>v-model</code></h2><p>By default, <code>&lt;b-form-checkbox&gt;</code> value will be true when checked and false when unchecked. You can customize the checked and unchecked values by specifying the value and unchecked-value properties, respectively.</p><p>When you have multiple checkboxes that bind to a single data state variable, you must provide an array reference (<code>[ ]</code>) to your v-model.</p><p>Note that when v-model is bound to multiple checkboxes (i.e an array ref), the unchecked-value is <strong>not used</strong>. Only the value(s) of the checked checkboxes will be returned in the v-model bound array. You should provide a unique value for each checkbox&#39;s value prop (the default of true will not work when bound to an array)</p><p>To pre-check any checkboxes, set the v-model to the value(s) of the checks that you would like pre-selected.</p><p>Note: the unchecked-value prop does not affect the native <code>&lt;input&gt;</code>&#39;s <code>value</code> attribute, because browsers don&#39;t include unchecked boxes in form submissions. To guarantee that one of two values is submitted in a native <code>&lt;form&gt;</code> submit (e.g. &#39;yes&#39; or &#39;no&#39;), use radio inputs instead. This is the same limitation that Vue has with native checkbox inputs.</p>',8),p={class:"mt-2"},l=(0,t.Uk)("Selected: "),u=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>\n    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(car, index) in availableCars<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedCars<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span>\n    {{ car }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mt-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Selected: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">&gt;</span></span>{{ concatSelectedCars}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">,</span> computed<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n  <span class="token keyword">const</span> availableCars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;BMW&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mercedes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Toyota&#39;</span><span class="token punctuation">]</span>\n  <span class="token keyword">const</span> selectedCars <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> concatSelectedCars <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> selectedCars<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="multiple-checkboxes-and-accessibility" tabindex="-1"><a class="header-anchor" href="#multiple-checkboxes-and-accessibility" aria-hidden="true">#</a> Multiple checkboxes and accessibility</h3><p>When binding multiple checkboxes together, you must set the name prop to the same value for all <code>&lt;b-form-checkbox&gt;</code>s in the group individually. This will inform users of assistive technologies that the checkboxes are related and enables native browser keyboard navigation.</p><h2 id="inline-and-stacked-checkboxes" tabindex="-1"><a class="header-anchor" href="#inline-and-stacked-checkboxes" aria-hidden="true">#</a> Inline and stacked checkboxes</h2><p><code>&lt;b-form-checkbox&gt;</code> renders block-level (stacked) checkboxes. Set the inline prop on <code>&lt;b-form-checkbox&gt;</code> not inside a <code>&lt;b-form-checkbox-group&gt;</code> to place the checkboxes next to each other.</p>',5),i=(0,t._)("div",{class:"my-2"},[(0,t._)("label",null,"Individual stacked checkboxes (default)")],-1),r=(0,t._)("div",{class:"my-2"},[(0,t._)("label",null,"Individual inline checkboxes")],-1),d=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Individual stacked checkboxes (default)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>\n    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(car, index) in availableCars<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedCars<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">&gt;</span></span>\n    {{ car }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>Individual inline checkboxes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span>\n    <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(car, index) in availableCars<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedCars<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>car<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">inline</span>\n  <span class="token punctuation">&gt;</span></span>\n    {{ car }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="control-sizing" tabindex="-1"><a class="header-anchor" href="#control-sizing" aria-hidden="true">#</a> Control sizing</h2><p>Use the <code>size</code> prop to control the size of the checkbox. The default size is medium. Supported size values are <code>sm</code> (small) and <code>lg</code> (large).</p>',3),k=(0,t.Uk)("Small"),h=(0,t.Uk)("Default"),b=(0,t.Uk)("Large"),m=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>Default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="button-style-checkboxes" tabindex="-1"><a class="header-anchor" href="#button-style-checkboxes" aria-hidden="true">#</a> Button style checkboxes</h2><p>You can optionally render checkboxes to appear as buttons, either individually, or in a group.</p><p>Button style checkboxes will have the class .active automatically applied to the label when they are in the checked state.</p><h3 id="individual-checkbox-button-style" tabindex="-1"><a class="header-anchor" href="#individual-checkbox-button-style" aria-hidden="true">#</a> Individual checkbox button style</h3><p>A single checkbox can be rendered with a button appearance by setting the prop button to true</p><p>Change the button variant by setting the button-variant prop to one of the standard Bootstrap button variants (see <code>&lt;b-button&gt;</code> for supported variants). The default variant is secondary.</p>',7),g={class:"d-flex flex-row"},v=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button1Checked<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">button</span><span class="token punctuation">&gt;</span></span>\n  Button Checkbox (Checked: {{ button1Checked }})\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button2Checked<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">button</span> <span class="token attr-name">button-variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  Button Checkbox (Checked: {{ button2Checked }})\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n  <span class="token keyword">const</span> button1Checked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> button2Checked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="switch-style-checkboxes" tabindex="-1"><a class="header-anchor" href="#switch-style-checkboxes" aria-hidden="true">#</a> Switch style checkboxes</h2><p>Switch styling is supported on <code>&lt;b-form-checkbox&gt;</code> components.</p><p>Note: If the checkbox is in <a href="#button-style-checkboxes">button mode</a>, switch mode will have no effect.</p><h3 id="individual-checkbox-switch-style" tabindex="-1"><a class="header-anchor" href="#individual-checkbox-switch-style" aria-hidden="true">#</a> Individual checkbox switch style</h3><p>A single checkbox can be rendered with a switch appearance by setting the prop switch to true</p>',6),f=(0,t.Uk)("Switch Checkbox "),x=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">switch</span><span class="token punctuation">&gt;</span></span>Switch Checkbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n  <span class="token keyword">const</span> switchChecked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="non-custom-check-inputs-plain" tabindex="-1"><a class="header-anchor" href="#non-custom-check-inputs-plain" aria-hidden="true">#</a> Non custom check inputs (plain)</h2><p>You can have <code>&lt;b-form-checkbox&gt;</code> render a browser native checkbox input by setting the plain prop.</p>',3),w=(0,t.Uk)("Plain Checkbox"),y=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">plain</span><span class="token punctuation">&gt;</span></span>Plain Checkbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="contextual-states" tabindex="-1"><a class="header-anchor" href="#contextual-states" aria-hidden="true">#</a> Contextual states</h2><p>Bootstrap includes validation styles for valid and invalid states on most form controls.</p><p>Generally speaking, you&#39;ll want to use a particular state for specific types of feedback:</p><ul><li><code>false</code> (denotes invalid state) is great for when there&#39;s a blocking or required field. A user must fill in this field properly to submit the form.</li><li><code>true</code> (denotes valid state) is ideal for situations when you have per-field validation throughout a form and want to encourage a user through the rest of the fields.</li><li><code>null</code> Displays no validation state (neither valid nor invalid) To apply one of the contextual state icons on <code>&lt;b-form-checkbox&gt;</code>, set the state prop to false (for invalid), true (for valid), or null (no validation state).</li></ul><p>Note: Contextual states are not supported when in button mode.</p>',6),q=(0,t.Uk)("Checkbox state false"),C=(0,t.Uk)("Checkbox state true"),_=(0,t.Uk)("Checkbox state null"),W=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Checkbox state false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">:state</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Checkbox state true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>Checkbox state null<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="autofocus" tabindex="-1"><a class="header-anchor" href="#autofocus" aria-hidden="true">#</a> Autofocus</h2><p>When the autofocus prop is set on <code>&lt;b-form-checkbox&gt;</code>, the input will be auto-focused when it is inserted (i.e. mounted) into the document, or re-activated when inside a Vue <code>&lt;keep-alive&gt;</code> component. Note that this prop does not set the autofocus attribute on the input, nor can it tell when the input becomes visible.</p><h2 id="indeterminate-tri-state-support" tabindex="-1"><a class="header-anchor" href="#indeterminate-tri-state-support" aria-hidden="true">#</a> Indeterminate (tri-state) support</h2><p>Normally a checkbox input can only have two states: checked or unchecked. They can have any value, but they either submit that value (checked) or don&#39;t (unchecked) with a form submission (although BootstrapVue allows a value for the unchecked state on a single checkbox)</p><p>Visually, there are actually three states a checkbox can be in: checked, unchecked, or <strong>indeterminate</strong>.</p><p>The indeterminate state is <strong>visual only</strong>. The checkbox is still either checked or unchecked as a value. That means the visual indeterminate state masks the real value of the checkbox, so that better make sense in your UI!</p><p><code>&lt;b-form-checkbox&gt;</code> supports setting this visual indeterminate state via the indeterminate prop (defaults to false). Clicking the checkbox will clear its indeterminate state.</p>',8),S=(0,t.Uk)("Click me to see what happens"),V={class:"mt-2"},U=(0,t.Uk)(" Checked: "),B=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b-form-checkbox</span> <span class="token attr-name">:indeterminate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Click me to see what happens<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b-form-checkbox</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n  <span class="token keyword">const</span> intermChecked <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="component-reference" tabindex="-1"><a class="header-anchor" href="#component-reference" aria-hidden="true">#</a> Component reference</h2><h3 id="b-form-checkbox" tabindex="-1"><a class="header-anchor" href="#b-form-checkbox" aria-hidden="true">#</a> <code>&lt;b-form-checkbox&gt;</code></h3><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>aria-label</code></td><td><code>String</code></td><td></td><td>Sets the value of <code>aria-label</code> attribute on the rendered element</td></tr><tr><td><code>aria-labeledby</code></td><td><code>String</code></td><td></td><td>The ID of the element that provides a label for this component. Used as the value for the <code>aria-labelledby</code> attribute</td></tr><tr><td><code>autofocus</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set to <code>true</code>, attempts to auto-focus the control when it is mounted, or re-activated when in a keep-alive. Does not set the <code>autofocus</code> attribute on the control</td></tr><tr><td><code>button</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox with the appearance of a button</td></tr><tr><td><code>button-variant</code></td><td><code>String</code></td><td><code>secondary</code></td><td>Applies one of Bootstrap&#39;s theme colors when in &#39;button&#39; mode</td></tr><tr><td><code>disabled</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set to <code>true</code>, disables the component&#39;s functionality and places it in a disabled state</td></tr><tr><td><code>form</code></td><td><code>String</code></td><td></td><td>ID of the form that the form control belongs to. Sets the <code>form</code> attribute on the control</td></tr><tr><td><code>id</code></td><td><code>String</code></td><td></td><td>Used to set the <code>id</code> attribute on the rendered content, and used as the base to generate any additional element IDs as needed. When not set, an autogenerated id is used.</td></tr><tr><td><code>indeterminate</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Renders the checkbox in an indeterminate state.</td></tr><tr><td><code>inline</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox as an inline element rather than as a 100% width block</td></tr><tr><td><code>name</code></td><td><code>String</code></td><td></td><td>Sets the value of the <code>name</code> attribute on the form control</td></tr><tr><td><code>plain</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>Renders the form control in plain mode, rather than custom styled mode</td></tr><tr><td><code>required</code></td><td><code>Boolean</code></td><td></td><td>Adds the <code>required</code> attribute to the form control when <code>name</code> is also filled in.</td></tr><tr><td><code>size</code></td><td><code>String</code></td><td><code>md</code></td><td>Set the size of the component&#39;s appearance. &#39;sm&#39;, &#39;md&#39; (default), or &#39;lg&#39;</td></tr><tr><td><code>state</code></td><td><code>Boolean</code></td><td></td><td>Controls the validation state appearance of the component. <code>true</code> for valid, <code>false</code> for invalid, or <code>null</code> for no validation state</td></tr><tr><td><code>switch</code></td><td><code>Boolean</code></td><td><code>false</code></td><td>When set, renders the checkbox with the appearance of a switch</td></tr><tr><td><span style="white-space:nowrap;"><code>unchecked-value</code></span></td><td><code>String</code>,<code>Boolean</code></td><td><code>false</code></td><td>Value returned when this checkbox is unchecked.</td></tr><tr><td><code>value</code></td><td><code>String</code>,<code>Boolean</code>, <code>Object</code></td><td><code>false</code></td><td>Value returned when this checkbox is checked.</td></tr></tbody></table><h4 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>default modelValue</td><td><code>Boolean,String, Array</code></td><td><code>null</code></td><td>The value of the checkbox(es). Must be an array when there are multiple checkboxes</td></tr></tbody></table><h3 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td>Content to place in the label of the form checkbox</td></tr></tbody></table><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3><table><thead><tr><th>Name</th><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td><code>change</code></td><td><code>checked</code> - Value of checkbox(es). When bound to multiple checkboxes, value will be an array</td><td>Emitted when selected value(s) is changed due to user interaction</td></tr><tr><td><code>input</code></td><td><code>checked</code> - Value of checkbox(es). When bound to multiple checkboxes, value will be an array</td><td>Emitted when selected value(s) is changed</td></tr></tbody></table>',11);var z=(0,t.aZ)({setup(a){const n=(0,o.iH)(!1),s=(0,o.iH)(!1),z=(0,o.iH)(!1),I=(0,o.iH)(!0),T=["BMW","Mercedes","Toyota"],D=(0,o.iH)([]),E=(0,o.Fl)((()=>D.value.join(", ")));return(a,N)=>{const A=(0,t.up)("b-form-checkbox"),H=(0,t.up)("b-card"),Y=(0,t.up)("ClientOnly");return(0,t.wg)(),(0,t.iD)(t.HY,null,[c,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t._)("div",null,[((0,t.wg)(),(0,t.iD)(t.HY,null,(0,t.Ko)(T,((a,n)=>(0,t.Wm)(A,{key:n,modelValue:D.value,"onUpdate:modelValue":N[0]||(N[0]=a=>D.value=a),value:a},{default:(0,t.w5)((()=>[(0,t.Uk)((0,e.zw)(a),1)])),_:2},1032,["modelValue","value"]))),64))]),(0,t._)("div",p,[l,(0,t._)("strong",null,(0,e.zw)((0,o.SU)(E)),1)])])),_:1})])),_:1}),u,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t._)("div",null,[i,((0,t.wg)(),(0,t.iD)(t.HY,null,(0,t.Ko)(T,((a,n)=>(0,t.Wm)(A,{key:n,modelValue:D.value,"onUpdate:modelValue":N[1]||(N[1]=a=>D.value=a),value:a},{default:(0,t.w5)((()=>[(0,t.Uk)((0,e.zw)(a),1)])),_:2},1032,["modelValue","value"]))),64))]),(0,t._)("div",null,[r,((0,t.wg)(),(0,t.iD)(t.HY,null,(0,t.Ko)(T,((a,n)=>(0,t.Wm)(A,{key:n,modelValue:D.value,"onUpdate:modelValue":N[2]||(N[2]=a=>D.value=a),value:a,inline:""},{default:(0,t.w5)((()=>[(0,t.Uk)((0,e.zw)(a),1)])),_:2},1032,["modelValue","value"]))),64))])])),_:1})])),_:1}),d,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t._)("div",null,[(0,t.Wm)(A,{size:"sm"},{default:(0,t.w5)((()=>[k])),_:1}),(0,t.Wm)(A,null,{default:(0,t.w5)((()=>[h])),_:1}),(0,t.Wm)(A,{size:"lg"},{default:(0,t.w5)((()=>[b])),_:1})])])),_:1})])),_:1}),m,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t._)("div",g,[(0,t.Wm)(A,{modelValue:n.value,"onUpdate:modelValue":N[3]||(N[3]=a=>n.value=a),class:"m-2",button:""},{default:(0,t.w5)((()=>[(0,t.Uk)(" Button Checkbox (Checked: "+(0,e.zw)(n.value)+") ",1)])),_:1},8,["modelValue"]),(0,t.Wm)(A,{modelValue:s.value,"onUpdate:modelValue":N[4]||(N[4]=a=>s.value=a),class:"m-2",button:"","button-variant":"danger"},{default:(0,t.w5)((()=>[(0,t.Uk)(" Button Checkbox (Checked: "+(0,e.zw)(s.value)+") ",1)])),_:1},8,["modelValue"])])])),_:1})])),_:1}),v,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t.Wm)(A,{modelValue:z.value,"onUpdate:modelValue":N[5]||(N[5]=a=>z.value=a),switch:""},{default:(0,t.w5)((()=>[f,(0,t._)("strong",null,"(Checked: "+(0,e.zw)(z.value)+")",1)])),_:1},8,["modelValue"])])),_:1})])),_:1}),x,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t.Wm)(A,{plain:""},{default:(0,t.w5)((()=>[w])),_:1})])),_:1})])),_:1}),y,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t.Wm)(A,{state:!1},{default:(0,t.w5)((()=>[q])),_:1}),(0,t.Wm)(A,{state:!0},{default:(0,t.w5)((()=>[C])),_:1}),(0,t.Wm)(A,null,{default:(0,t.w5)((()=>[_])),_:1})])),_:1})])),_:1}),W,(0,t.Wm)(Y,null,{default:(0,t.w5)((()=>[(0,t.Wm)(H,null,{default:(0,t.w5)((()=>[(0,t.Wm)(A,{modelValue:I.value,"onUpdate:modelValue":N[6]||(N[6]=a=>I.value=a),indeterminate:!0},{default:(0,t.w5)((()=>[S])),_:1},8,["modelValue"]),(0,t._)("div",V,[U,(0,t._)("strong",null,(0,e.zw)(I.value),1)])])),_:1})])),_:1}),B],64)}}})}}]);